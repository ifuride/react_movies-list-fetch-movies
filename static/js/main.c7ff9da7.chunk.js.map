{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","concat","then","res","json","catch","Response","Error","normalizedMovie","Poster","Title","Plot","imdbID","FindMovie","_ref2","addMovie","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","setMovie","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","isLoading","setIsLoading","trimmedQuery","trim","handleSubmitSearch","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","wrap","_context","prev","next","preventDefault","sent","t0","finish","stop","_x","apply","arguments","_Fragment","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","useCallback","isDuplicate","some","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7ff9da7.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=17b31426';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\nconst normalizedMovie = ({\n  Poster,\n  Title,\n  Plot,\n  imdbID,\n}: MovieData): Movie => {\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n};\n\ntype Props = {\n  addMovie: (movie: Movie) => boolean,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const trimmedQuery = query.trim();\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setErrorMessage('');\n  };\n\n  const handleSubmitSearch = async (\n    event: React.FormEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const response = await getMovie(trimmedQuery);\n\n      if ('imdbID' in response) {\n        setMovie(normalizedMovie(response as MovieData));\n      }\n\n      if ('Error' in response) {\n        if (response.Error === 'Movie not found!') {\n          setErrorMessage('Can\\'t find a movie with such a title');\n        } else {\n          setErrorMessage(response.Error);\n        }\n      }\n    } catch (error) {\n      setErrorMessage(error as string);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      const isDublicate = addMovie(movie);\n\n      if (isDublicate) {\n        setErrorMessage('This movie has alredy been added');\n      }\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmitSearch}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleTitleInput}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!trimmedQuery}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    const isDuplicate = movies.some(({ imdbId }) => imdbId === movie.imdbId);\n\n    if (!isDuplicate) {\n      setMovies(prev => ([...prev, movie]));\n    }\n\n    return isDuplicate;\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}